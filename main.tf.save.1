resource "aws_vpc" "Demo-vpc" {
  cidr_block = "10.0.0.0/16"
}
#subnet
resource "aws_subnet" "Demo-subnet" {
  vpc_id     = aws_vpc.Demo-vpc.id
  cidr_block = "10.0.1.0/24"

  tags = {
    Name = "Demo-subnet"
  }
}
#internet gateway
resource "aws_internet_gateway" "Demo-gw" {
  vpc_id = aws_vpc.Demo-vpc.id

  tags = {
    Name = "Demo-gw"
  }
}
#route table
resource "aws_route_table" "Demo-rt" {
  vpc_id = aws_vpc.Demo-vpc.id

  route {
    cidr_block = "0.0.0.0/0"
    gateway_id = aws_internet_gateway.Demo-gw.id
  }


  tags = {
    Name = "Demo-rt"
  }
}

#security group
resource "aws_security_group" "Demo-sg" {
  name        = "Demo-sg"
  description = "Demo-sg"
  vpc_id      = aws_vpc.Demo-vpc.id

ingress {
    description      ="HTTPS"
    from_port        = 443
    to_port          = 443
    protocol         = "tcp"
    cidr_blocks      = ["0.0.0.0/0"]
    ipv6_cidr_blocks = ["::/0"]
  }

ingress {
    description      ="HTTP"
    from_port        = 80
    to_port          = 80
    protocol         = "tcp"
    cidr_blocks      = ["0.0.0.0/0"]
    ipv6_cidr_blocks = ["::/0"]
  }

ingress {
    description      ="SSH"
    from_port        = 22
    to_port          = 22
    protocol         = "tcp"
    cidr_blocks      = ["0.0.0.0/0"]
    ipv6_cidr_blocks = ["::/0"]
  }
egress {
    from_port        = 0
    to_port          = 0
    protocol         = "-1"
    cidr_blocks      = ["0.0.0.0/0"]
    ipv6_cidr_blocks = ["::/0"]
  }

  tags = {
    Name = "Demo-sg"
  }
}
#ec2 instance
resource "aws_instance" "terraform" {
  ami           = "ami-02b49a24cfb95941c"
  instance_type = "t2.micro"
  #vpc_id        = aws_vpc.Demo-vpc.id
  subnet_id     = aws_subnet.Demo-subnet.id
  security_groups=aws_security_group.Demo-sg.id  

  cpu_options {
    core_count       = 1
    threads_per_core = 1
  }

  tags = {
    Name = "terraform"
  }
}
